{"version":3,"sources":["frontend/components/Card/index.tsx","frontend/components/Column/index.tsx","frontend/pages/Homepage/index.tsx","frontend/App.tsx","index.tsx"],"names":["Card","columnIdx","items","dragItem","handleDragEnter","dragStart","dragging","getStyles","params","currentItem","current","cardIdx","map","title","key","draggable","className","onDragStart","e","onDragEnter","Column","plans","setPlans","dragNode","useState","fix","setFix","text","setText","setDragging","dragEnd","removeEventListener","target","newPlans","splice","length","event","addEventListener","setTimeout","onClick","onSubmit","preventDefault","duplicate","find","el","submit","type","value","onChange","Homepage","newPlan","setNewPlan","newPlanTitle","setNewPlanTitle","useRef","idx","prevPlans","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54da39f7.chunk.js","sourcesContent":["import React, { DragEvent } from 'react'\n\nimport { CardInterface } from '../../components/Column'\n\ninterface CardProps {\n  columnIdx: number;\n  items: Array<string>;\n  dragItem: any;\n  handleDragEnter: (e: DragEvent<HTMLDivElement>, props: CardInterface) => void;\n  dragStart: (e: DragEvent<HTMLDivElement>, props: CardInterface) => void;\n  dragging: boolean;\n}\n\nconst Card = ({ columnIdx, items, dragItem, handleDragEnter, dragStart, dragging } : CardProps) => {\n  const getStyles = (params: CardInterface) => {\n    const currentItem = dragItem.current;\n    if (currentItem.columnIdx === params.columnIdx && currentItem.cardIdx === params.cardIdx) {\n      return 'card current'\n    }\n    return 'card'\n  }\n\n  return (\n    <div>\n      {items.map((title: string, cardIdx: number) =>\n        <div\n          key={title}\n          draggable\n          className={dragging ? getStyles({ columnIdx, cardIdx }) : 'card'}\n          onDragStart={e => dragStart(e, { columnIdx, cardIdx })}\n          onDragEnter={e => handleDragEnter(e, { columnIdx, cardIdx })}\n        >\n          <p>{title}</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Card\n","import React, { useState, FormEvent, DragEvent } from 'react';\n\nimport { Plans } from '../../pages/Homepage';\nimport Card from '../Card';\n\ninterface ColumnInterface {\n  columnIdx: number;\n  currentItem: Plans;\n  setPlans: (plans: Plans[]) => void;\n  plans: Plans[]\n  dragItem: any;\n  dragNode: any;\n}\n\nexport interface CardInterface {\n  columnIdx: number; \n  cardIdx: number;\n}\n\nconst Column = ({ columnIdx, currentItem, plans, setPlans, dragItem, dragNode } : ColumnInterface) => {\n  const { title, items } = currentItem;\n  const [fix, setFix] = useState<boolean>(false);\n  const [text, setText] = useState<string>('');\n  const [dragging, setDragging] = useState<boolean>(false);\n\n  const submit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const duplicate = items.find(el => el === text); \n    if (!text || duplicate) return;\n\n    const newPlans = [...plans];\n    newPlans[columnIdx].items = [...newPlans[columnIdx].items, text];\n    setPlans(newPlans);\n\n    setText('');\n    setFix(false);\n  }\n\n  const dragStart = (e: DragEvent<HTMLDivElement>, params: CardInterface) => {\n    dragItem.current = params;\n    dragNode.current = e.target;\n    dragNode.current.addEventListener('dragend', dragEnd);\n    setTimeout(() => setDragging(true), 0);\n  }\n\n  const dragEnd = () => {\n    setDragging(false);\n    dragNode.current.removeEventListener('dragend', dragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  }\n\n  const handleDragEnter = (e: DragEvent<HTMLDivElement>, params: CardInterface) => {\n    const currentItem = dragItem.current;\n    if (e.target !== dragNode.current) {\n      const newPlans = [...plans];\n      newPlans[params.columnIdx].items.splice(params.cardIdx, 0, newPlans[currentItem.columnIdx].items.splice(currentItem.cardIdx, 1)[0]);\n      dragItem.current = params;\n      setPlans(newPlans)\n    }\n  }\n\n  return (\n    <div\n      className='column droppable'\n      onDragEnter={!currentItem.items.length ? event => handleDragEnter(event, { columnIdx, cardIdx: 0 }) : () => ''}\n    >\n      <h3>{title}</h3>\n      <Card \n        items={items} \n        columnIdx={columnIdx} \n        handleDragEnter={handleDragEnter} \n        dragItem={dragItem} \n        dragStart={dragStart}\n        dragging={dragging}\n      />\n\n      {!fix && <button className='default-button' onClick={() => setFix(true)}>+ Add one more card</button>}\n      {fix && <form className='default-form' onSubmit={e => submit(e)}>\n          <input className='default-input' type='text' value={text} onChange={e => setText(e.target.value)} />\n          <button className='default-button' type='submit'>+ Add card</button>\n        </form>}\n    </div>\n  );\n}\n\nexport default Column\n","import React, { useState, useRef, FormEvent } from 'react'\n\nimport Column from '../../components/Column';\n\nexport interface Plans {\n  title: string;\n  items: Array<string>;\n}\n\nconst Homepage = () => {\n  const [plans, setPlans] = useState<Plans[]>([\n    { title: 'Plans for a month', items: ['Celebrate Birthday', 'Go somewhere', 'Make a portfolio'] },\n    { title: 'Plans for a next day', items: ['Celebrate Smth', 'Go to the University'] },\n    { title: 'Done plans', items: ['Celebrate', 'Make something useful'] },\n  ]);\n  const [newPlan, setNewPlan] = useState<boolean>(false);\n  const [newPlanTitle, setNewPlanTitle] = useState<string>('');\n  const dragItem = useRef<any>();\n  const dragNode = useRef<any>();\n\n  const submit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setPlans(prevPlans => [...prevPlans, { title: newPlanTitle, items: [] }]);\n    setNewPlan(false);\n    setNewPlanTitle('');\n  }\n\n  return (\n    <section className='container default-layout'>\n      <div className='content'>\n        {plans.map((el, idx) => \n          <Column \n            key={el.title}\n            columnIdx={idx}\n            currentItem={el}\n            plans={plans}\n            setPlans={setPlans}\n            dragItem={dragItem}\n            dragNode={dragNode}\n          />\n        )}\n        <div className='column'>\n          {!newPlan && <button className='default-button' onClick={() => setNewPlan(true)}>+ Add new plan</button>}\n          {newPlan && <form onSubmit={e => submit(e)}>\n            <input \n              type='text'\n              value={newPlanTitle}\n              onChange={e => setNewPlanTitle(e.target.value)}\n              className='default-input'\n            />\n            <button type='submit' className='default-button'>+ Add new plan</button>\n          </form>}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Homepage\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport './styles/main.scss';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/Trello-clone\" component={Homepage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './frontend/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}